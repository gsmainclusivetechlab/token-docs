"use strict";(self.webpackChunktoken_docs=self.webpackChunktoken_docs||[]).push([[1544],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||l;return n?o.createElement(h,a(a({ref:t},s),{},{components:n})):o.createElement(h,a({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<l;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const l={id:"developers",title:"Developers",sidebar_label:"Developers"},a=void 0,i={unversionedId:"developer-guide/developers",id:"developer-guide/developers",title:"Developers",description:"- Docker Compose Version: +1.29",source:"@site/docs/developer-guide/developers.md",sourceDirName:"developer-guide",slug:"/developer-guide/developers",permalink:"/developer-guide/developers",draft:!1,tags:[],version:"current",frontMatter:{id:"developers",title:"Developers",sidebar_label:"Developers"}},c={},p=[{value:"Running the code locally",id:"running-the-code-locally",level:3},{value:"Documentation - OpenAPI",id:"documentation---openapi",level:2}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Prerequisite - This solution require",type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Docker Compose Version: +1.29"),(0,r.kt)("li",{parentName:"ul"},"Docker Version: +17.06"))),(0,r.kt)("h3",{id:"running-the-code-locally"},"Running the code locally"),(0,r.kt)("p",null,"In this case, the developer need to access the token-backend repository (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gsmainclusivetechlab/token-backend"},"https://github.com/gsmainclusivetechlab/token-backend"),") and the token-frontend repository (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/gsmainclusivetechlab/token-frontend"},"https://github.com/gsmainclusivetechlab/token-frontend"),") and go to main branch to clone the repository, then follow the next steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Frontend")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run this commands")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install\nnpm run serve\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Backend")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run this commands")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker-compose build\ndocker-compose up -d \n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"To teardown everything, run the next command\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker-compose down\n")),(0,r.kt)("p",null,"In this situation the developers have the oportunity to made some changes on code and see changes  "),(0,r.kt)("admonition",{title:".env File",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you want to use Live mode with Twilio, you will need to fill the properties on the .env file (TWILIO_SID, TWILIO_TOKEN and TWILIO_MESSAGE_SID) with your Twilio credentials and config the receive webhook (A MESSAGE COMES IN option on Messaging section) for the path '{url}:4100/hooks/twilio'")),(0,r.kt)("h2",{id:"documentation---openapi"},"Documentation - OpenAPI"),(0,r.kt)("p",null,"You can see the documentation of each api in the following urls after starting the code locally"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"localhost:4000/docs - Proxy\nlocalhost:4100/docs - SMS Gateway\nlocalhost:4200/docs - USSD Gateway\nlocalhost:4300/docs - MMO\nlocalhost:4400/docs - Engine\nlocalhost:3700/docs - Token Solution\n")))}u.isMDXComponent=!0}}]);