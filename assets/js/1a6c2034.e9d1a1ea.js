"use strict";(self.webpackChunktoken_docs=self.webpackChunktoken_docs||[]).push([[1544],{7612:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var n=o(7462),l=(o(7294),o(3905));o(8209);const a={id:"developers",title:"Developers",sidebar_label:"Developers"},i=void 0,r={unversionedId:"developer-guide/developers",id:"developer-guide/developers",title:"Developers",description:"- Docker Compose Version: +1.29",source:"@site/docs/developer-guide/developers.md",sourceDirName:"developer-guide",slug:"/developer-guide/developers",permalink:"/developer-guide/developers",draft:!1,tags:[],version:"current",frontMatter:{id:"developers",title:"Developers",sidebar_label:"Developers"}},s={},d=[{value:"Running the code locally",id:"running-the-code-locally",level:3},{value:"Documentation - OpenAPI",id:"documentation---openapi",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...o}=e;return(0,l.kt)(p,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("admonition",{title:"Prerequisite - This solution require",type:"info"},(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"Docker Compose Version: +1.29"),(0,l.kt)("li",{parentName:"ul"},"Docker Version: +17.06"))),(0,l.kt)("h3",{id:"running-the-code-locally"},"Running the code locally"),(0,l.kt)("p",null,"In this case, the developer need to access the token-backend repository (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gsmainclusivetechlab/token-backend"},"https://github.com/gsmainclusivetechlab/token-backend"),") and the token-frontend repository (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gsmainclusivetechlab/token-frontend"},"https://github.com/gsmainclusivetechlab/token-frontend"),") and go to main branch to clone the repository, then follow the next steps:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Frontend")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Run this commands")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm install\nnpm run serve\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Backend")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Run this commands")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"docker-compose build\ndocker-compose up -d \n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"To teardown everything, run the next command\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"docker-compose down\n")),(0,l.kt)("p",null,"In this situation the developers have the oportunity to made some changes on code and see changes  "),(0,l.kt)("admonition",{title:".env File",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If you want to use Live mode with Twilio, you will need to fill the properties on the .env file (TWILIO_SID, TWILIO_TOKEN and TWILIO_MESSAGE_SID) with your Twilio credentials and config the receive webhook (A MESSAGE COMES IN option on Messaging section) for the path '{url}:4100/hooks/twilio'")),(0,l.kt)("h2",{id:"documentation---openapi"},"Documentation - OpenAPI"),(0,l.kt)("p",null,"You can see the documentation of each api in the following urls after starting the code locally"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"localhost:4000/docs - Proxy\nlocalhost:4100/docs - SMS Gateway\nlocalhost:4200/docs - USSD Gateway\nlocalhost:4300/docs - MMO\nlocalhost:4400/docs - Engine\nlocalhost:3700/docs - Token Solution\n")))}u.isMDXComponent=!0}}]);