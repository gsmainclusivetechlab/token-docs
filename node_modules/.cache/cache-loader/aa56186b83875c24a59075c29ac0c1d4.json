{"remainingRequest":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/eudis/Dev/GSMA/token/token-docs/docs/architecture/overview.md","dependencies":[{"path":"/Users/eudis/Dev/GSMA/token/token-docs/docs/architecture/overview.md","mtime":1615379398036},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-architecture-overview-md-0b1.json","mtime":1643661532270},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}