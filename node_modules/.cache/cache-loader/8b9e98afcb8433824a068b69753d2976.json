{"remainingRequest":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/eudis/Dev/GSMA/token/token-docs/docs/architecture/app.md","dependencies":[{"path":"/Users/eudis/Dev/GSMA/token/token-docs/docs/architecture/app.md","mtime":1614773302560},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-architecture-app-md-076.json","mtime":1643661532270},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/token/token-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2V1ZGlzL0Rldi9HU01BL3Rva2VuL3Rva2VuLWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonYXBwJyx0aXRsZTonQ29tbXVuaWNhdGlvbiBDaGFubmVscycsc2lkZWJhcl9sYWJlbDonQ29tbXVuaWNhdGlvbiBDaGFubmVscycsc2x1ZzonL2FwcCd9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJhcmNoaXRlY3R1cmUvYXBwIiwiaWQiOiJhcmNoaXRlY3R1cmUvYXBwIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkNvbW11bmljYXRpb24gQ2hhbm5lbHMiLCJkZXNjcmlwdGlvbiI6IkNvbW11bmljYXRpb24gY2hhbm5lbHMgYWN0IGFzIGEgcG9pbnQgb2YgaW50ZXJhY3Rpb24gYmV0d2VlbiB0aGUgdXNlciBhbmQgdGhlIiwic291cmNlIjoiQHNpdGUvZG9jcy9hcmNoaXRlY3R1cmUvYXBwLm1kIiwic2x1ZyI6Ii9hcHAiLCJwZXJtYWxpbmsiOiIvYXBwIiwidmVyc2lvbiI6ImN1cnJlbnQiLCJzaWRlYmFyX2xhYmVsIjoiQ29tbXVuaWNhdGlvbiBDaGFubmVscyIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiQjRMTCBBcmNoaXRlY3R1cmUiLCJwZXJtYWxpbmsiOiIvYXJjaGl0ZWN0dXJlL292ZXJ2aWV3In0sIm5leHQiOnsidGl0bGUiOiJFbmdpbmUiLCJwZXJtYWxpbmsiOiIvYXJjaGl0ZWN0dXJlL2VuZ2luZSJ9fTsvKiBAanN4UnVudGltZSBjbGFzc2ljICovIC8qIEBqc3ggbWR4ICovaW1wb3J0IHVzZUJhc2VVcmwgZnJvbSdAZG9jdXNhdXJ1cy91c2VCYXNlVXJsJztleHBvcnQgY29uc3QgdG9jPVt7dmFsdWU6J0NhbGwgQ2VudHJlJyxpZDonY2FsbC1jZW50cmUnLGNoaWxkcmVuOltdfSx7dmFsdWU6J01vYmlsZSBBcHBsaWNhdGlvbicsaWQ6J21vYmlsZS1hcHBsaWNhdGlvbicsY2hpbGRyZW46W119XTtjb25zdCBsYXlvdXRQcm9wcz17dG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYENvbW11bmljYXRpb24gY2hhbm5lbHMgYWN0IGFzIGEgcG9pbnQgb2YgaW50ZXJhY3Rpb24gYmV0d2VlbiB0aGUgdXNlciBhbmQgdGhlCnByb2plY3QgYW5kIGNhbiB1c2UgZGlmZmVyZW50IHR5cGVzIG9mIHVzZXIgaW50ZXJmYWNlcy4gQ3VycmVudGx5LCB0d28KY29tbXVuaWNhdGlvbiBjaGFubmVscyBhcmUgYmVpbmcgdXNlZCBpbiB0aGUgcHJvamVjdDogYSBjYWxsIGNlbnRlciBhbmQgYSBtb2JpbGUKYXBwbGljYXRpb24uYCksbWR4KCJoMyIseyJpZCI6ImNhbGwtY2VudHJlIn0sYENhbGwgQ2VudHJlYCksbWR4KCJwIixudWxsLGBUaGUgY2FsbCBjZW50ZXIgaXMgZXhlY3V0ZWQgaW5kZXBlbmRlbnRseSBvZiB0aGUgbW9iaWxlIGFwcGxpY2F0aW9uIGFuZCB1c2VzClR3aWxpbyBhcyBhIGNvbW11bmljYXRpb24gcHJvdmlkZXIuIFRoZSBjb25uZWN0aW9ucyBiZXR3ZWVuIHRoZSBlbmdpbmUgYW5kClR3aWxpbyBhcmUgbWFkZSB0aHJvdWdoIFR3aWxpbyBNYXJrdXAgTGFuZ3VhZ2UgKFR3aU1MKS5gKSxtZHgoImRpdiIse3N0eWxlOnt0ZXh0QWxpZ246J2NlbnRlcid9fSxtZHgoImltZyIse2FsdDoiRG9jdXNhdXJ1cyB3aXRoIEtleXRhciIsc3JjOnVzZUJhc2VVcmwoJ2ltZy9DYWxsQ2VudHJlVHdpbGlvLnN2ZycpfSkpLG1keCgiaDMiLHsiaWQiOiJtb2JpbGUtYXBwbGljYXRpb24ifSxgTW9iaWxlIEFwcGxpY2F0aW9uYCksbWR4KCJwIixudWxsLGBUaGUgbW9iaWxlIGFwcGxpY2F0aW9uIGlzIHN0aWxsIHVuZGVyIGRldmVsb3BtZW50IGFuZCB3aWxsIGFsbG93IGEgYmV0dGVyIHVzZXIKZXhwZXJpZW5jZSB3aGVuIHRlc3RpbmcgdGhlIGRpZmZlcmVudCB1c2UgY2FzZXMgYW5kIGJpb21ldHJpYyBzdXBwbGllcnMuYCksbWR4KCJwIixudWxsLGBUaGUgYXBwbGljYXRpb24gcHJvdmlkZXMgb3BlcmF0b3JzIHdpdGggYSBzaG93Y2FzZSBlbnZpcm9ubWVudCB0byBleHBlcmllbmNlIHRoZQp1c2UgY2FzZXMgZm9yIGRpZmZlcmVudCB0eXBlcyBvZiBiaW9tZXRyaWNzLiBUaGlzIHdheSB3ZSBjYW4gY29uY2VudHJhdGUKZGlmZmVyZW50IGFwcHJvYWNoZXMgdXNpbmcgb25lIGNvbW11bmljYXRpb24gY2hhbm5lbC4gSXQgYWxsb3dzIHRvIHByb3ZpZGUgYQpnb29kIHVzZXIgZXhwZXJpZW5jZSB3aGVuIHRoZSBvcGVyYXRvcnMgbmVlZCB0byBkZWNpZGUgYWJvdXQgd2hhdCBpcyB0aGUgYmVzdAp0eXBlIG9zIGJpb21ldHJpYyBhbmQgdGhlIGJlc3Qgc29sdXRpb24gYXZhaWxhYmxlIGluIHRoZSBtYXJrZXQuIFRoaXMgaXMKcG9zc2libGUgc2luY2UgdGhlIEI0bGwgY2FuIGNvbm5lY3QgdG8gZGlmZmVlcmVudCBzdXBwbGllcnMsIGFsbG93aW5nIGEKY29tcGFyaXNvbiBiZXR3ZWVuIHNvbHV0aW9ucyBhbmQgYWxnb3JpdGhtcyBhdmFpbGFibGVzLmApLG1keCgicCIsbnVsbCxgVGhlIGZvbGxvd2luZyBmaWd1cmUgc2hvd3MgYSBnZW5lcmljIHVzZSBjYXNlIGFib3V0IGhvdyB0aGUgYXBwbGljYXRpb24gd2lsbAp3b3JrLiBVc2VycyBhY2Nlc3MgdGhlIGFwcCBhbmQgc2VsZWN0IHRoZSBwYXJhbWV0ZXJzIGZvciB0aGUgZGVtbywgc3VjaCBhczoKYmlvbWV0cmljIHR5cGUsIGJpb21ldHJpYyBzdXBwbGllciBhbmQgdXNlIGNhc2UuIFRoZSBhcHBsaWNhdGlvbiBjb25uZWN0cyB3aXRoCm91ciBlbmdpbmUsIG9yIGlmIG5lY2Vzc2FyeSB3aXRoIGFub3RoZXIgY29tbXVuaWNhdGlvbiBjaGFubmVsLCBhbGxvd2luZyByZXF1ZXN0CmFuZCByZXNwb25zZSBjYWxscyB0aHJvdWdoIGFuIEFQSSBnYXRld2F5LmApLG1keCgiZGl2Iix7c3R5bGU6e3RleHRBbGlnbjonY2VudGVyJ319LG1keCgiaW1nIix7YWx0OiJEb2N1c2F1cnVzIHdpdGggS2V5dGFyIixzcmM6dXNlQmFzZVVybCgnaW1nL2FwcFVzZUNhc2Uuc3ZnJyl9KSksbWR4KCJwIixudWxsLGBPdXIgbWFpbiBvYmplY3RpdmUgaXMgdG8gZGVtb25zdHJhdGUgdGhlIHBvdGVudGlhbCBvZiBiaW9tZXRyaWNzIGluIGVtZXJnaW5nCm1hcmtldHMgaW4gb3JkZXIgdG8gcHJvdmlkZSBmaW5hbmNpYWwgaW5jbHVzaW9uLiBCZWNhdXNlIG9mIHRoaXMsIHRoZSB0YXJnZXQKb3BlcmF0aW5nIHN5c3RlbXMgaW4gdGhpcyBmaXJzdCBtb21lbnQgYXJlIEFuZHJvaWQsIEFuZHJvaWQgR28gYW5kIGlPUy4gQWxzbywKd2hlbmV2ZXIgcG9zc2libGUsIHRoZSBmZWF0dXJlIHBob25lcyBhcmUgYmVpbmcgY29uc2lkZXJlZC5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}